"""
Перестановка элементов массива целых чисел — это расположение его элементов в последовательности или линейном порядке.

Например, для arr = [1,2,3] все возможные перестановки arr: [1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1].
Следующая перестановка массива целых чисел — это следующая лексикографически большая перестановка его элементов. Если говорить более формально, то если все перестановки массива отсортированы в одном контейнере в лексикографическом порядке, то следующей перестановкой этого массива будет перестановка, следующая за ней в отсортированном контейнере. Если такое расположение невозможно, массив должен быть переставлен в наименьший возможный порядок (то есть отсортирован по возрастанию).

Например, следующая перестановка arr = [1,2,3] является [1,3,2].
Аналогично, следующая перестановка arr = [2,3,1] является [3,1,2].
В то время как следующая перестановка arr = [3,2,1] — это [1,2,3], потому что [3,2,1] не имеет лексикографически более крупной перестановки.
Учитывая массив целых чисел nums, найдите следующую перестановку nums.

Замена должна быть на месте и использовать только постоянную дополнительную память.
"""

import itertools


def next_permutation(nums: list[int]) -> None:
    sorted_perms = sorted(set(itertools.permutations(nums)))
    try:
        idx = sorted_perms.index(tuple(nums)) + 1
        next_perm = sorted_perms[idx]
    except IndexError:
        next_perm = sorted_perms[0]
    nums[:] = list(next_perm)


if __name__ == "__main__":
    nums = [1, 2, 3]
    next_permutation(nums)
    print(nums)  # Output: [1, 3, 2]
